







AGORA ESTUDAREMOS AS TRANSIENT DATABASES, SCHEMAS E TABLES...










-> O PROFESSOR ESCREVE ASSIM:







//Create permanent database 

CREATE OR REPLACE DATABASE TDB;





//Create transient table 
CREATE OR REPLACE TRANSIENT TABLE TDB.public.customers_transient (
        ID INT,
        FIRST_NAME STRING,
        LAST_NAME STRING,
        EMAIL STRING,
        GENDER STRING,
        JOB STRING,
        PHONE STRING
);




INSERT INTO TDB.public.customers_transient
SELECT t1.* FROM OUR_FIRST_DB.public.customers t1
CROSS JOIN(SELECT * FROM OUR_FIRST_DB.public.customers) t2;














SE quisermos criar 1 

transient object,

basta colocar a keyword de ""transient"" antes do object type..







--> RAPIDAMENTE CRIAMOS 1 TRANSIENT TABLE...






--> mas nao tenho data nessa table de customers...




preciso pegar essa data de algum lugar...












--> depois disso, executamos 


""SHOW TABLES"", 

para visualizar as características dessa table..






--> O RETENTION TIME DESSA TABLE SERÁ DE 1...










--> O PROFESSOR ENTAO EXECUTA 




SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.TABLE_STORAGE_METRICS;






ok... mas essa table NAO ESTÁ MOSTRANDO O NOME DE NOSSA NOVA TABLE, POR ALGUMA RAZAO.. (
    customers_transient..
)


--> O PROFESSOR DIZ QUE DEMORA UM POUCO PARA ESSA TABLE SER UPDATADA (
    é por isso que nao enxerguei essa table... (a de transient)
)




----------------------------------------














OK... MAS O QUE INTERESSA É QUE, EM TRANSIENT TABLES,

OS FAILSAFE BYTES 



FICAM COMO 0... --> NAO EXISTE FAILSAFE STORAGE AREA PARA ESSAS TRANSIENT TABLES..


--> É ISSO QUE PRECISAMOS SABER...
















ADICIONALMENTE,

SE RODARMOS ESTE COMANDO:


//Set retention time to 0 
ALTER TABLE TDB.public.customers_transient
SET DATA_RETENTION_TIME_IN_DAYS = 0;






DESABILITAMOS O RECURSO DE ""TIME TRAVEL"" 

DESSA TRANSIENT TABLE (
    fazendo com que a data 

    ALTERADA/APAGADA DESSA TABLE, E A TABLE EM SI,

    SEJAM UNRECOVERABLE EM CASO 

    DE ACIDENTES... --> pq ficamos sem nenhum dia para ""voltar atrás"",
    e também ficamos sem o failsafe....
)





--------------------------------












SEM FAILSAFE, SEM TIMETRAVEL....






















OUTRO DETALHE.... --> VOCE NAO TEM A POSSIBILIDADE DE 



DEFINIR UM VALUE ENTRE 0 e 1, DENTRO DE 



DATA_RETENTION_TIME_IN_DAYS.... ------> PQ APENAS TEMOS A POSSIBILIDADE 

DE DEFINIR ESSES  VALUES 


COMO 1 OU 0... (

    e essa restricao existe em todas as transient tables...
)





-----------------------------------------






OK.... --> SEMPRE TENHA EM MENTE QUE TRANSIENT TABLES 

NAO POSSUEM FAILSAFE ZONE....





-----------------------









--> APENAS PODEMOS DEFINIR OS VALUES DO 

DATA_RETENTION_TIME_IN_DAYS  COMO 0 OU 1...




--> SE TENTAMOS DEFINIR


isso como um value diferente, ganhamos 

invalid parameter...


--------------------------------







--> A PRÓXIMA COISA QUE 



DEVEMOS 


TER EM MENTE É QUE



SE CRIAMOS 


1 TRANSIENT SCHEMA 

E 1 TABLE DENTRO DESSE SCHEMA,






ESSA TABLE __ TAMBÉM SERÁ 

DE TIPO 

""TRANSIENT""...








-> ESCREVEMOS ASSIM:







-- CREATING TRANSIENT SCHEMA AND THEN TABLE:



CREATE OR REPLACE TRANSIENT SCHEMA TDB.transient_example;


SHOW SCHEMAS;


CREATE OR REPLACE TABLE TDB.TRANSIENT_SCHEMA.new_transient_table (
    ID INT,
    FIRST_NAME STRING,
    LAST_NAME STRING,
    EMAIL STRING,
    GENDER STRING,
    JOB STRING,
    PHONE STRING
);



-----------------------------














SE EXECUTARMOS ISSO, E SE CRIARMOS 1 TABLE

DENTRO 
DESSE SCHEMA,



ELA AUTOMATICAMENTE SERÁ DE TIPO TRANSIENT...




---------------------------------












--> PARA TESTAR ISSO,

PODEMOS TENTAR 

ALTERAR O VALUE DE DATA_RETENTION_TIME_IN_DAYS..




--> tentar colocar como 2.... --> nao será possível,

justamente 

pq 

esse table type será 

"transient"... (o máximo é 1, nesse table type)...  












OK... NOSSA TABLE REALMENTE 


VIROU TRANSIENT,


TUDO PQ FOI CRIADA DENTRO 


DO SCHEMA DE TYPE "TRANSIENT"...








--> RESUMINDO, O QUE PRECISAMOS SABER:






TRANSIENT TABLES:




1) NO FAILSAFE 




2) RETENTION TIMES POSSÍVEIS 

SAO APENAS 0 OU 1...




3) TODAS AS TABLES CRIADAS 

DENTRO DE DATABASES/SCHEMAS DE TIPO "TRANSIENT"

TAMBÉM TERÃO UM TYPE DE "TRANSIENT"...














AGORA VEREMOS O ÚLTIMO TABLE TYPE,

QUE 

É O TEMPORARY...





