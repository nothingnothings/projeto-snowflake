Cron Table Format:
A cron table has five fields, followed by the command or script to be executed. Each field represents a different time unit and specifies when the job should run. The format is as follows:




* * * * * command_to_be_executed
- - - - -
| | | | |
| | | | +----- Day of the week (0 - 7) (Sunday is both 0 and 7)
| | | +------- Month (1 - 12)
| | +--------- Day of the month (1 - 31)
| +----------- Hour (0 - 23)
+------------- Minute (0 - 59)















MNEMOTÉCNICA:








    M   S
M H D M D
I O I E I 
N R A S A
  A M   S
    E   E
    S   M
        A
        n
        A 




M H D M D








MONSTER HUNTER DANTE MUST DIE.






















M H D M D










(0 - 59) MINUTE
(0 - 23) HOUR
(1 - 31) DAY OF THE MONTH
(1-12) MONTH 
(0-7) DAY OF THE WEEK  (SUNDAY IS BOTH 0 AND 7)...




---------------------------------------













- - - - - 









CARACTERES ESPECIAIS, NOS FIELDS DE TIME:




* -- asterisco --> REPRESENTA """TODO"""
                    """TODO""""" === ESSE É O SIGNIFICADO...



EXEMPLO: 

"*" no campo de MINUTOS SIGNIFICA ""TODO 
MINUTO"" (a cada minuto)...








quer dizer que 


* * * * * -------> SIGNIFICA
run every minute of every hour, 
every day of the month, every month,
 and every day of the week. 
 It is the most frequent schedule 
 possible in cron, executing a command
 or script every minute.





















M inute  (0 - 59)
H our (0 - 23)
D ay of month  (1-31)
M onth (1-12)
D ay of week (0-7)







------------------------------------










* --> TODO VALUE/QUALQUER VALUE...



* * * * * --> EVERY MINUTE.









"," --> VÍRGULA -> USADA PARA ESPECIFICAR 
                    UMA __ LISTA__ DE VALORES.

EXEMPLO:
'0, 15, 30, 45' NO CAMPO DE MINUTES...

ISSO SIGNIFICA 

""NOS MOMENTOS 0, 15, 30 E 45 DE UMA ÚNICA HORA""...






EX:

0,15,30,45 * * * *:


In this case, the cron job is
 scheduled to run at specific minutes: 
 0, 15, 30, and 45, while all other fields 
 are represented by asterisks, meaning
  "every" possible value. Let's look at
   what this means for each field:

Minute: The cron job will run when the minute is 0, 15, 30, or 45.
Hour: The cron job will run every hour.
Day of the month: The cron job will run every day of the month.
Month: The cron job will run every month.
Day of the week: The cron job will run every day of the week.


To summarize, the cron job
 represented by 0,15,30,45 * * * * will
  execute at 0, 15, 30, and 45 minutes 
  past the hour every hour,
   every day, every month, and every day 
   of the week. This schedule
    is useful when you want a specific
     task to run at regular intervals 
     throughout the day.







outro ex:






M H D M D 





* 12 * * *:









In this case, the cron job
 is scheduled to run at a specific hour,
  which is 12 (noon), while all other 
  fields are represented by asterisks, 
  meaning "every" possible value.
   Let's look at what this means for each field:

Minute: The cron job will run
 every minute of the hour.

Hour: The cron job will run 
only at 12:00 PM (noon).

Day of the month: The cron job 
will run every day of the month.

Month: The cron job 
will run every month.

Day of the week: The cron job will run every day of the week.

To summarize, the cron job represented 
by * 12 * * * 
will execute every minute of the 12th
 hour (12:00 PM) of every day, every month,
  and every day of the week. This 
  schedule is useful when you want a task 
  to run regularly at a specific time 
  of day. In this case, the task
   will run once a day at noon.

















PARA RODAR APENAS 1 ÚNICA VEZ,


AO MEIO-DIA:



0 12 * * *






In this case, the cron job is scheduled 
to run at a specific time each day: 
12:00 PM (noon). Here's what each field
 signifies:

Minute: The cron job will run when the
 minute is 0, meaning the top of the hour.

Hour: The cron job will run
 only when the hour is 12 (noon).

Day of the month: The cron 
job will run every day of the month.

Month: The cron job will run every month.

Day of the week: The cron job will run every day of the week.

To summarize, the cron job represented 
by 0 12 * * * will execute at 12:00 PM (noon)
 every day of every month, regardless
  of the day of the week. This schedule 
  is useful when you want a task
   to run regularly at the same time each
    day. In this case, the task
     will run once a day at noon.










OUTRO EXEMPLO:






0 0 1 1 0





In this case, the cron job is scheduled to run
 at a specific time and date:

Minute: 0 (The task will run when 
the minute is 0, meaning the top of the hour).

Hour: 0 (The task will run when the hour is 0, 
meaning midnight or 12:00 AM).

Day of the month: 1 (The task will run on the 1st day of the month).

Month: 1 (The task will run in January).

Day of the week: 0 (The task will run on Sunday).








To summarize, the cron
 job represented by 0 0 1 1 0 will run
  once a year, specifically at midnight
   on January 1st, on a Sunday. This 
   schedule is useful for tasks that need 
   to be performed on a specific annual
    event, such as a yearly maintenance 
    routine or special event preparations.
















AGORA O MESMO CÓDIGO, MAS SEM SE IMPORTAR 

COM O DIA DA SEMANA 

EM QUE O DIA CAI:







0 0 1 1 0-7:













In this case, the cron job is scheduled to run at a specific time and date:

Minute: 0 (The task will run when the minute is 0, meaning the top of the hour).


Hour: 0 (The task will run when the hour is 0, meaning midnight or 12:00 AM).

Day of the month: 1 (The task will run on the 1st day of the month).

Month: 1 (The task will run in January).

Day of the week: 0-7 (The task will run on any day of the week, from Sunday to Sunday).

The expression 0-7 in the "Day of the week" field means that the cron job will run on any day of the week, including Sunday (both 0 and 7 represent Sunday). This essentially means that the job will run on January 1st, regardless of which day of the week it falls on.

To summarize, the cron job
 represented by 0 0 1 1 0-7 will run 
 once a year, specifically at midnight 
 on January 1st, on any day of the week
  (Sunday to Sunday). This schedule is 
  useful when you want the task to be
   executed on a specific date every year,
    regardless of the day of the week.
















OK... 



OUTRAS ANOTACOES:









'-' --> HÍFEN --> SIGNIFICA 

"RANGE OF VALUES" --> POR EXEMPLO,

"1-5" NO SLOT DE HORA SIGNIFICA 
""DA 1 DA MANHA AS 5 DA MANHA"...






'/' --> USADO PARA ESPECIFICAR 
"STEP VALUES" 



EXEMPLO: 

"*/5" SIGNIFICA "A CADA 5 MINUTOS"...









Here are some example cron job entries:

0 2 * * * /path/to/backup_script.sh: 

This cron job runs the backup_script.sh at 2:00 AM daily.











0 2 * * *


A CADA DIA, 2 HORAS DA MANHA,
ESSE SCRIPT É EXECUTADO.









30 12 * * 1,4 /path/to/weekly_task.sh:





quando o minuto bate 30, 

ao MEIO-DIA de cada SEGUNDA e QUINTA.







 This cron job runs weekly_task.sh at 12:30 PM every Monday and Thursday.



*/15 * * * * /path/to/data_processing_script.py: 






ESSE RODA ESSE SCRIPT A CADA 15 MINUTOS, SEMPRE, TODOS OS DIAS.





This cron job runs data_processing_script.py every 15 minutes.










-------------------------







EXERCÍCIOS:








1) EVERY DAY AT 3:30 AM .....


fica tipo 








30 3 * * *







2) toda segunda, 8 da noite....




0 20 * * 1









3) A CADA 15 MINUTOS...




*/15 * * * *








4) CADA DIA 15 DO MES, AO MEIO-DIA.




0 12 15 * *








5) TODA SEXTA E SÁBADO, 11 DA NOITE...



0 23 * * 5,6










6) CADA HORA, DAS 8 DA MANHA ATÉ 5 DA TARDE,
EM DIAS DA SEMANA (DE SEGUNDA A SEXTA)....



0 8-17 * * 1-5








7) A CADA 30 MINUTOS, DURANTE BUSINESS HOURS (
    DE SEGUNDA À SEXTA, 9 da manha até 5 da tarde.
)


*/30 9-17 * * 1-5







8) CADA PRIMEIRO DIA DO ANO, À MEIA NOITE...



0 0 1 1 0-7



OU 


0 0 1 1 *





9) TODO DOMINGO, 6:30 DA MANHA E 6:30 DA NOITE:




30 6,18 * * 0





10) CADA MINUTO 10 DE ALGUMA HORA,


DAS 3 DA NOITE ÀS 7 DA NOITE,

NO DIA 20 DE CADA MES...




10 15-19 20 * *





----------------------------------------












--> SE ESCREVEMOS "L" NO SLOT DE "DAY OF THE MONTH",



FICAMOS COM O VALUE DE "ÚLTIMO DIA DO MES" (pq 
pode ser 29, 30, 31, etc)...

















--> PARA O WEEKDAY,




TAMBÉM PODEMOS COLOCAR "L"...









--> MAS NO WEEKDAY, SE COLOCAMOS "L",


O SIGNIFICADO 

É DIFERENTE...




EX:



5L ---> SIGNIFICA "ÚLTIMA SEXTA DO MÊS"....









EX:



CREATE OR REPLACE TASK CUSTOMER_INSERT_TASK
    WAREHOUSE=COMPUTE_WH
    SCHEDULE = 'USING CRON 0 7-10 * * 5L UTC'
    AS
    INSERT INTO CUSTOMERS(CREATE_DATE) VALUES (CURRENT_TIMESTAMP);













AGORA ALGUNS EXEMPLOS:




-- Every minute 
SCHEDULE = 'USING CRON * * * * * UTC';



-- EVery DAY AT 6AM UTC:
SCHEDULE = 'USING CRON 0 6 * * * UTC';

-- Every hour, starting at 9AM and ending at 5PM on sundays:
0 9-17 * * 0 America/Lost_Angeles 




CREATE OR REPLACE TASK CUSTOMER_INSERT_TASK
    WAREHOUSE = COMPUTE_wH
    SCHEDULE = 'USING CRON 0 9,17 * * * UTC'
    AS 
    INSERT INTO CUSTOMERS(CREATE_DATE) VALUES (CURRENT_TIMESTAMP);



-----------------------







