





NA ÚLTIMA AULA,

VIMOS COMO PODEMOS SETTAR 1 MASK POLICY,




E COMO PODEMOS APLICAR POLICIES EM COLUMNS 

ESPECÍFICAS...







AGORA VEREMOS MAIS ALGUNS EXEMPLOS,


E VEREMOS O QUE DEVEMOS CONSIDERAR,
 
 QUANDO 

 O ASSUNTO É MASKING POLICIES...













TEMOS ESTE CÓDIGO:









USE ROLE ANALYST_FULL;
SELECT * FROM CUSTOMERS;


USE ROLE ANALYST_MASKED
SELECT * FROM CUSTOMERS;





######## MORE EXAMPLES #########



USE ROLE ACCOUNTADMIN;



------- 1) Apply policy to multiple columns 



-- Apply policy on a specific column 
ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN FULL_NAME 
SET MASKING POLICY PHONE_POLICY;



-- Apply policy on another specific column 
ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN PHONE
SET MASKING POLICY PHONE_POLICY;

















O PROFESSOR DESTACA QUE É POSSÍVEL APLICAR 1 MESMA POLICY 


A MÚLTIPLAS COLUMNS...







É ISSO QUE OBSERVAMOS NO CÓDIGO MAIS ACIMA,
EM QUE 

APLICAMOS 
1 

MESMA POLICY A 2 DIFERENTES COLUMNS....












OK... FUNCIONOU, 





FICAMOS COM 2 COLUMNS COM A MESMA MASKING POLICY...

















MAS HÁ UMA COISA QUE 


É ESPECÍFICA A POLICIES...

















--> SE DEFINIMOS 1 POLICY A 1 TABLE,


A 1 COLUMN ESPECÍFICA,




NAO SOMOS CAPAZES DE FAZER "DROP" 

OU "REPLACE" DESSA POLICY IMEDIATAMENTE... --> EM VEZ DISSO,

PARA CONSEGUIRMOS 


TIRAR ESSA POLICY,





É NECESSÁRIO PRIMEIRAMENTE FAZER "UNSET" DESSA POLICY..











PARA FAZER UNSET, TEMOS QUE SER O ACCOUNTADMIN...








PARA DEMONSTRAR, ESCREVEMOS ASSIM:











-------- 2) REPLACE OR DROP POLICY 



DROP MASKING POLICY PHONE_POLICY; -- nao funcionará imediatamente, pq PRIMEIRAMENTE TEMOS QUE FAZER "UNSET" DESSA POLICY











--> OU SEJA, GANHAMOS 1 ERROR,


ERROR DIZENDO QUQE ESSA POLICY JÁ ESTÁ ASSOCIADA 


COM 1 OU MAIS ENTIDADES (
    SIGNIFICA QUE JÁ ESTÁ ATRIBUÍDA A ALGUMA COLUMN...
)








--> ISSO QUER DIZER QUE NAO PODEMOS DROPPAR NEM FAZER 

REPLACE DESSA POLICY,



NESSA COLUMN...









PODEMOS VER O ERRO AO RODAR O CÓDIGO DE REPLACE,


QUE PODE SER ESTE AQUI:







CREATE OR REPLACE MASKING POLICY PHONE_POLICY AS  --- ESTE CÓDIGO TAMBÉM NAO FUNCIONARÁ, POIS NAO É POSSÍVEL FAZER O DROP/REPLACE DE 1 POLICY SE ESSA POLICY NAO TIVER SIDO "UNSET" anteriormente....
    (VAL VARCHAR) RETURNS VARCHAR -> 
    CASE
        WHEN CURRENT_ROLE() IN ('ANALYST_FULL', 'ACCOUNTADMIN') THEN VAL 
        ELSE CONCAT(LEFT(val, 2), '********')
        END;






Policy PHONE_POLICY cannot be dropped/replaced as it is associated with one or more entities.















--> QUER DIZER QUE ELA SÓ PODE SER DROPPADA/REPLACED 


QUANDO ELA NAO ESTIVER SENDO APLICADA 

A MAIS NENHUMA COLUMN...




-----------------------------









MAS COMO PODEMOS DESCOBRIR 

"""A QUE COLUMNS ESSA POLICY ESTÁ ATUALMENTE VINCULADA"""?












--> DEVEMOS RODAR:





-- List and describe policies (Which columns are being used on, etc) --
DESC MASKING POLICY PHONE_POLICY;
SHOW MASKING POLICIES;















OK, MAS ISSO AINDA NAO NOS MOSTRA "A QUE COLUMNS ESSAS 
POLICIES ESTAO APLICADAS"...














--> PRA DESCOBRIR ESSA INFO, PRECISAMOS DESTE SELECT STATEMENT:



SELECT * FROM TABLE(INFORMATION_SCHEMA.POLICY_REFERENCES(POLICY_NAME => 'PHONE_POLICY'));














JÁ 'REF_COLUMN_NAME',

ESSA COLUMN,

NOS INFORMA DA COLUMN EM QUE 

ESSA POLICY ESTÁ POSICIONADA....














--> PARA FAZER O UNSET DESSA POLICY NAS COLUMNS,

TEMOS ESTES COMANDOS:






-- Remove policy from columns before replacing/dropping --
ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN FULL_NAME
UNSET MASKING POLICY;


ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN EMAIL 
UNSET MASKING POLICY;

ALTER TABLE IF EXISTS CUSTOMERS MODIFCY COLUMN phone 
UNSET MASKING POLICY













agora se checarmos essa policy,


COM O COMANDO 


DE 



select * from TABLE (INFORMATION_SCHEMA.POLICY_REFERENCES(policy_name => 'phone_policy'));,







VEREMOS QUE 



ESSA POLICY NAO ESTARÁ SETTADA EM MAIS NENHUMA COLUMN....













AGORA, COM ISSO, PODEMOS FINALMENTE 


DROPPAR/REPLACEAR 


ESSA POLICY...










NO CASO, ALTERAMOS A POLICY, COM ESTE COMANDO:












CREATE OR REPLACE MASKING POLICY PHONE_POLICY AS  --- ESTE CÓDIGO FUNCIONARÁ, POIS AGORA A POLICY NAO ESTARÁ MAIS SETTADA ATRIBUÍDA A NENHUMA COLUMN... 
    (VAL VARCHAR) RETURNS VARCHAR -> 
    CASE
        WHEN CURRENT_ROLE() IN ('ANALYST_FULL', 'ACCOUNTADMIN') THEN VAL 
        ELSE CONCAT(LEFT(val, 2), '********')
        END;










--------------------------













É CLARO QUE PODEMOS REAPLICAR ESSA MASKING POLICY NAS COLUMNS,



SE QUISERMOS,


COM ESTES COMANDOS DE ALTER TABLE:





ALTER TABLE IF EXISTS CUSTOMERS MODIFY COLUMN full_name 
SET MASKING POLICY PHONE_POLICY;


















COM ESSA POLICY, DEIXAMOS VISÍVEIS APENAS 

OS 2 PRIMEIROS CARACTERES 
DO 

FULL_NAME, E O RESTO DOS CARACTERES SAO MASKED COM "*****",




tudo por conta 

deste código:






CREATE OR REPLACE MASKING POLICY PHONE_POLICY AS  --- ESTE CÓDIGO TAMBÉM NAO FUNCIONARÁ, POIS NAO É POSSÍVEL FAZER O DROP/REPLACE DE 1 POLICY SE ESSA POLICY NAO TIVER SIDO "UNSET" anteriormente....
    (VAL VARCHAR) RETURNS VARCHAR -> 
    CASE
        WHEN CURRENT_ROLE() IN ('ANALYST_FULL', 'ACCOUNTADMIN') THEN VAL 
        ELSE CONCAT(LEFT(val, 2), '********')
        END;



---------------------------








RESUMINDO: 


DEVEMOS SEMPRE FAZER UNSET DA POLICY EM TODAS 
AS COLUMNS,

ANTES DE FAZER DROP/REPLACE 
DESSA MESMA POLICY.





TAMBÉM QUE PODEMOS RODAR 
O COMANDO DE SELECT PARA VER EM QUE 


COLUMNS 

ESSA POLICY ESTÁ SENDO APLICADA:


select * from TABLE (INFORMATION_SCHEMA.POLICY_REFERENCES(policy_name => 'phone_policy'));,







-----------------------------




FINALMENTE, DEPOIS DE VER O CREATE E MANAGE DE POLICIES,

QUEREMOS VER ALGUNS REAL-LIFE EXAMPLES,



para nos ajudarem a encontrar o melhor use-case para nós...