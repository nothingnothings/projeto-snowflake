AGORA DEVEMOS FALAR SOBRE 



AS DIFERENTES SCALING POLICIES DE 


SCALE DE NOSSO CLUSTER... UP AND DOWN...












--> OK...





NÓS JÁ APRENDEMOS SOBRE MULTI-CLUSTERS...












MULTI-CLUSTER --> POR EXEMPLO,


SE TEMOS 1 WAREHOUSE, COMO ESTA:











S [] []






ELA É DO SIZE SMALL...





O QUE PODE ACONTECER É QUE, 

DE TEMPOS EM TEMPOS,

PODEMOS FICAR COM  __ MAIS QUERIES__ 


DO QUE __ ESSA SINGLE WAREHOUSE 

É CAPAZ DE PROCESSAR...





--> ISSO VAI CAUSAR 1 PROBLEMA,

PQ 

AÍ OS USERS 

TEM QUE 


ESPERAR


ATÉ ESSA QUEUE SER PROCESSADA...








--> A SOLUCAO PARA ISSO,

NO CASO,


É AUTOMATICAMENTE,

A DEPENDER DO WORKLOAD,


FAZER _ SHUTDOWN OU STARTUP DE 


CLUSTERS __ DINAMICAMENTE...













EX:




S [] [] 








VIRA ISTO:



S [] [] 

S [] [] 








ASSIM CONSEGUIMOS 


DISTRIBUIR OS QUERIES QUE NAO CONSEGUIAM 

SER PROCESSADOS POR APENAS 
1
ÚNICO WAREHOUSE 


__ TAMBÉM POR OUTROS WAREHOUSES...












--> OK... É ISSO QUE QUEREMOS DIZER,

QUANDO O ASSUNTO É AUTO-SCALING....







-> NESSA LECTURE,


FALAREMOS SOBRE 




COMO ESSE AUTO-SCALING FUNCIONA EXATAMENTE,





E O QUE EXATAMENTE SAO 



AS OUTRAS 2 SCALING POLICIES (STANDARD 

E ECONOMIC)...












-_> MAS ANTES DE FALARMOS SOBRE ISSO 


EM MAIORES DETALHES,




O PROFESSOR QUER FALAR 


DO USE-CASE 




DE ________-MULTI-CLUSTERS -_> ESSE USE-CASE 




É, COMO O PROFESSOR MENCIONOU,





SE TEMOS 


MAIS __ WORKLOADS,


MAIS QUERIES,


VAMOS QUERER 



MAIS CLUSTERS...











---> MAIS WORKLOAD/QUERIES --> SIGNIFICA 


MAIS USERS EM __ CERTOS MOMENTOS...






--> OK... MAS 


TEMOS TAMBÉM UM 


USE-CASE 


QUE NAO 

É MUITO APROPRIADO 


PARA 



ESSE 

""mULTI-CLUSTERING"",


QUE 

É 


O USE-CASE 



EM QUE __ TEMOS _ QUERIES MAIS 

COMPLEXAS...












-> SE TEMOS QUERIES__ MAIS __ COMPLEXAS,




É BEM MELHOR __ AUMENTAR O ___TAMANHO__


DE 1 WORKLOAD QUE JÁ EXISTE 

(
    como, por exemplo,

    TROCAR DE 

    ""SMALL" PARA ""MEDIUM""...



    com isso, ficamos com 4 warehouses,

    em vez de 2....
)












RESUMINDO:





1) WORKLOADS VARIÁVEIS,

PICOS DE WORKLOAD QUE RESULTAM 

EM INSTABILIDADE E FILAS... --> PRECISAMOS 


USAR __MULTI-CLUSTERING, AUTO-SCALING... 




E O AUTO-SCALING É ISTO:



S [] []

S [] []

S [] []



("""MAX-CLUSTERS: 3""")....









2) QUANDO TEMOS _ QUERIES MT COMPLEXAS,
TEMOS DE SEGUIR O CAMINHO INVERSO; DEVEMOS 
__AUMENTAR __ TAMANHO DE NOSSA WAREHOUSE...



ex:


S [] [] 



EXPANDIMOS PARA FICAR ASSIM:




M [] [] [] [] 







CERTO...

















MAS NO NOSSO CASO,



QUEREMOS FALAR SOBRE __ 

A AUTO-SCALING POLICY,

AQUELA COISA DE REPRODUZIR 


1 WAREHOUSE, POR MEIO DE REPLICAS,
VARIAS COPIAS,

JUSTAMENTE 


PARA FAZER O PROCESSAMENTO DE SQL QUERIES 

EM PARALELO...
















DEVEMOS VER COMO ESSE MULTI-CLUSTER 


FUNCIONA NA PRÁTICA,
PARA 

ENTENDERMOS 


A DIFERENCA ENTRE 

AS DUAS __sCALING POLICIES...















-----------------------------------




MULTI-CLUSTERING...







--> resumindo:







S [] [] 











EM GERAL, SE TEMOS MAIS QUERIES 


DO QUE 



1 WAREHOUSE É CAPAZ DE QUERIAR __ SEM TER 
FILA__,




TEREMOS 1 FILA ADICIONAL...






EX:











S [F] [F] FF










-> FILA....


FILA DAS QUERIES ADICIONAIS...





--> QUER DIZER QUE OS USERS 

TERAO DE ESPERAR...








---> O BOM É QUE TEMOS ESSES MULTI-CLUSTERS,


QUE CONSEGUEM 
AUTOMATICAMENTE ADICIONAR 

NOVOS CLUSTERS...






ex:






S [F] [F] 

S [F] [F]











-> OK... MAS AGORA A 


PERGUNTA É 


""""QUANDO DEVEMOS STARTAR 1 ADDITIONAL 
CLUSTER?"""










QUAL É O TEMPO APROPRIADO?










--> E É EXATAMENTE 


NESSE ASPECTO QUE 



AS __ DIFERENTES 

""SCALING POLICIES"" DIFEREM...

NO TEMPO EM QUE ACONTECE O AUTO-SCALING...




O TEMPO NECESSÁRIO....









-> PQ ELES __ TEM DIFERENTES 


TEMPOS/MOMENTOS EM QUE 


1 NOVO, ADDITIONAL CLUSTER,


É STARTADO...














--> PORTANTO,


DEVEMOS DAR



1 OLHADA NESSAS 2 DIFERENTES 

SCALING POLICIES,


AS POLICIES QUE PODEMOS USAR



NA AUTO-SCALING FUNCTION...












TEMOS:







1) STANDARD 





-> o standard 



é o DEFAULT...

FAVORECE 
O _ START__ DE WAREHOUSES 
ADICIONAIS...





2) ECONOMY 



--> FAVORECE A CONSERVACAO 
DE CREDITS,
EM VEZ DO START DE WAREHOUSES 
ADICIONAIS...















STANDARD --> FAVORECE O START 

DE NOVAS WAREHOUSES 

E __ O KEEP _ UP __ 

DE PERFORMANCE,

EM VEZ DA CONSERVACAO DE CREDITS...











ECONOMY --> FAVORECE A CONSERVACAO 

DOS CREDITS,
EM VEZ DO START 



DE NOVAS WAREHOUSES....



















---> AGORA DEVEMOS DAR 1 OLHADA EM UMA 

TABELA,
TABELA 

DE ""QUANDO EXATAMENTE 1 DESSAS POLICIES 
VAI STARTAR 1 CLUSTER""...












EX:







1) STANDARD 




-> DESCRIPTION: 



PREVINE/MINIMIZA FILAS POR 
MEIO DO FAVORECIMENTO 
DO __ START DE __ CLUSTERS 
ADICIONAIS EM VEZ DO FAVORECIMENTO 
DA CONSERVACAO DE CREDITOS...



-> CLUSTER COMECA:

IMEDIATAMENTE QUANDO 1 QUERY 
__CHEGA NA FILA (IS QUERIED), OU 

QUANDO O SISTEMA DETECTA QUE 

HÁ MAIS _ QUERIES _ DO QUE 

A CAPACIDADE DE EXECUCAO 

DOS CLUSTERS ATUALMENTE DISPONÍVEIS...




--> CLUSTER É DESATIVADO (SHUT DOWN):

É DESATIVADO __DEPOIS __ 2 A 3 
CHECKS CONSECUTIVOS __ COM SUCESSO...
CHECS REALIZADOS DE 1 EM 1 MINUTO...
(
    ESSES CHECKS DETERMINAM SE A 
    LOAD NO CLUSTER MENOS CARREGADO 
    __ CONSEGUIU __
    SER DISTRIBUÍDA AOS OUTROS CLUSTERS...
)











2) ECONOMY 




-> DESCRIPTION 


CONSERVA CRÉDITOS POR MEIO 

DO FAVORECIMENTO __ DO RUN 

DE CLUSTERS _ ""FULLY-LOADED""

EM VEZ DE STARTAR CLUSTERS 

ADICIONAIS... --> RESULTADO:

ISSO PODE RESULTAR EM QUERIES 

FICANDO __NA FILA (QUEUED),

E, COMO CONSEQUENCIA, DEMORAREM 
MAIS 
PARA SEREM EXECUTADAS...








--> CLUSTER STARTS:


O CLUSTER STARTA ___ APENAS __ 

SE ___ O SISTEMA __ ESTIMA QUE 

EXISTE __ QUERY LOAD __ O BASTANTE 

PARA MANTER O CLUSTER __ OCUPADO __ 

POR __ PELO __ MENOS 6 MINUTOS...



6 MINUTOS.... ESSE É O DIVISOR DE ÁGUAS....








--> CLUSTER __ É DESATIVADO/SHUTS DOWN:


O CLUSTER __ É DESATIVADO __ 

APENAS __ DEPOIS __ 

DE 5 OU 6 CHECKS CONSECUTIVOS COM SUCESSO (em vez de 2 a 3 consecutive checks com sucesso)





------------------------















------>  APRENDEMOS QUE 

O START E SHUT DOWN 

DE CLUSTERS 

OCORRE AUTOMATICAMENTE 

E DINAMICAMENTE,
 

 A DEPENDER DO WORKLOAD...







--> COMO MENCIONAMOS,



TEMOS A POLICY DE STANDARD...








ELA FAVORECE O START DE CLUSTERS 

ADICIONAIS,

EM VEZ DO CONSERVE 

DE CREDITS...








NESSA SITUACAO, 

1 CLUSTER É 

STARTADO IMEDIATAMENTE QUANDO 

1 QUERY É QUEUED....








--> OU, ENTAO,
QUANDO O SISTEMA 
PERCEBE QUE 

A QUANTIDADE 

DE QUERIES NAO CONSEGUE 



RODAR AS QUERIES SEM TER FILAS...















--> O ECONOMY É A MESMA COISA,


MAS COM 1 LIMITE DE 6 MINUTOS (

    SÓ VAI STARTAR SE

    O WORKLOAD MANTER 

    O CLUSTER _ OCUPADO POR 6 MINUTOS...
)










-> NA STANDARD POLICY,
DEPOIS DE 2 OU 3 SUCCESSFUL CHECK....








OK... 1 CHECK É REALIZADO A CADA MINUTO...








E O QUE É UM CHECK --> É UM CHECK __ 


INVESTIGANDO __ SE A LOAD 



NO CLUSTER -_ MENOS __ CARREGADO __ 

PODERIA 

SER REDISTRIBUÍDA 



A OUTROS CLUSTERS...










SE SAO FEITOS 2-3 CONSECUTIVE CHECKS 


COM SUCESSO,



NO STANDARD POLICY 



O CLUSTER É SHUT DOWN...












--> NO ECONOMY POLICY,

O  CLUSTER SÓ É SHUT DOWN 

DEPOIS DE 5 A 6 CONSECUTIVE CHECKS..












-> STANDARD --> É O DEFAULT,

FAVORECE A PERFORMANCE EM VEZ DE 

CONSERVACAO DE CREDITS....








ECONOMY --> CONSERVA OS CREDITS, EM VEZ 

DA PERFORMANCE DE NOSSO QUERY PROCESS...













-> É ISSO QUE PRECISAMOS SABER 


SOBRE AS SCALING POLICIES....









AGORA DEVEMOS VER A PRÓXIMA COISA BÁSICA 

QUE TEMOS QUE SABER SOBRE 

O SNOWFLAKE..







O TÓPICO É A CREATION E MANAGEMENT 


DAS DATABASES E TABLES...






EXPLORAREMOS ISSO NA PRÓXIMA AULA....















