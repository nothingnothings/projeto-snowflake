








AGORA DEVEMOS VER TODAS AS ETAPAS, NA PRÁTICA,


PARA CRIAR ESSAS DEDICATED WAREHOUSES....










-> NO EXEMPLO DO PROFESSOR, FORAM IDENTIFICADOS 2 TIPOS DE USER 

GROUPS,


QUE SAO:



1) DATA SCIENTISTS 






2) DBA (DATABASE ADMINISTRATORS)...
















FICA TIPO ASSIM:














-- CREATE VIRTUAL WAREHOUSE FOR DIFFERENT USER GROUPS IN A COMPANY.


-- GROUP 1 ---- DATA SCIENTISTS
CREATE WAREHOUSE SCIENCE_WH
WITH WAREHOUSE_SIZE = 'SMALL'
WAREHOUSE_TYPE='STANDARD'
AUTO_SUSPEND=300
AUTO_RESUME=TRUE
MIN_CLUSTER_COUNT=1
MAX_CLUSTER_COUNT=1
SCALING_POLICY='STANDARD';





-- GROUP2 ----- DATABASE ADMINS
CREATE WAREHOUSE ADMIN_WH
WITH WAREHOUSE_SIZE = 'XSMALL'
WAREHOUSE_TYPE='STANDARD'
AUTO_SUSPEND=300
AUTO_RESUME=TRUE
MIN_CLUSTER_COUNT=1
MAX_CLUSTER_COUNT=1
SCALING_POLICY='STANDARD';








--------------------------------------










USAMOS O COMANDO ""cREATE"" COM A KEYWORD DE ""WAREHOUSE""...









--> VAI SE SUSPENDER DEPOIS DE 5 MINUTOS, DE ACORDO COM ESSAS 


CONFIGS...







--> ESSA WAREHOUSE É CRIADA....






-> FAZEMOS A MESMA COISA COM 


A PARTE DE DATABASE ADMINISTRATORS...





--> O PROFESSOR CRIA A WAREHOUSE COM A USER INTERFACE,
SÓ PARA VARIAR 1 POUCO...
















-> certo... agora temos 3 warehouses,





1 de ""compute_wh"" (a padrao),




""admin_wh""



e 



""SCIENCE_wh""..







-----------------------













MAS É CLARO QUE ISSO NAO É TUDO...

PRECISAMOS CRIAR TAMBÉM OS USERS... PARA SERMOS MAIS PRECISOS,

PRECISAMOS 
CRIAR 

OS 

""USER ROLES"" ( com todas suas permissions e etc)...












--> E PRECISAMOS ASSIGNAR ESSAS WAREHOUSES A ESSES ROLES,

E 

A ESSES USERS...











É ASSIM QUE FAZEMOS ISSO:











//Create role and GRANT PERMISSIONS for ROLES

CREATE ROLE DATA_SCIENTIST;
GRANT USAGE ON WAREHOUSE SCIENCE_WH TO ROLE DATA_SCIENTIST;


CREATE ROLE DB_ADMIN
GRANTE USAGE ON WAREHOUSE ADMIN_WH TO ROLE DB_ADMIN;





















MAS COMO PODEMOS FAZER ISSO...














-> É CLARO QUE, PARA CRIARMOS ROLES,





DEVEMOS TER A PERMISSION APROPRIADA PARA 

FAZÊ-LO....









-> É POR ISSO QUE O PROFESSOR TROCA 


A CONTA ATUAL, PARA 

""ACCOUNTADMIN""....




(
    PQ O ""SYSADMIN""

    nao é suficiente...
)










EX:




-- TO CREATE ROLES AND GRANT PERMISSIONS, YOU NEED TO BE USING AN ACCOUNT WITH THE REQUIRED PRIVILEGES (such as ACCOUNTADMIN, for example)


-- Create role and GRANT PERMISSIONS for ROLES
CREATE ROLE DATA_SCIENTIST; -- to create a role, one must be a ACCOUNTADMIN or a SECURITYADMIN
GRANT USAGE ON WAREHOUSE SCIENCE_WH TO ROLE DATA_SCIENTIST;


CREATE ROLE DB_ADMIN
GRANTE USAGE ON WAREHOUSE ADMIN_WH TO ROLE DB_ADMIN;


















-> OBS: O SECURITYADMIN __ NAO CONSEGUE __ CRIAR 

WAREHOUSES....






-- QUEM CRIA WAREHOUSES É REALMENTE O 

ACCOUNTADMIN...















DROP ROLE DATA_SCIENTIST; -- só é possível DROPPAR 1 ROLE _ se ESTAMOS USANDO O ROLE QUE CRIOU ESSE ROLE, PARA INÍCIO DE CONVERSA (ou seja, securityadmin pode apenas droppar roles QUE ELE MESMO CRIOU... MAS O ACCOUNTADMIN PODE DROPPAR QUAISQUER ROLES CRIADOS PELO SECURITY ADMIN, no entanto)















O CÓDIGO VAI FICANDO TIPO ASSIM:












-- TO CREATE ROLES AND GRANT PERMISSIONS, YOU NEED TO BE USING AN ACCOUNT WITH THE REQUIRED PRIVILEGES (such as ACCOUNTADMIN, for example)


-- Create role and GRANT PERMISSIONS for ROLES
CREATE ROLE DATA_SCIENTIST; -- to create a role, one must be a ACCOUNTADMIN or a SECURITYADMIN
GRANT USAGE ON WAREHOUSE SCIENCE_WH TO ROLE DATA_SCIENTIST; 
-- to assign a permission to a role, one must be a ACCOUNTADMIN or a SECURITYADMIN

CREATE ROLE DB_ADMIN
GRANT USAGE ON WAREHOUSE ADMIN_WH TO ROLE DB_ADMIN;








DROP ROLE DATA_SCIENTIST; -- só é possível DROPPAR 1 ROLE _ se ESTAMOS USANDO O ROLE QUE CRIOU ESSE ROLE, PARA INÍCIO DE CONVERSA (ou seja, securityadmin pode apenas droppar roles QUE ELE MESMO CRIOU... MAS O ACCOUNTADMIN PODE DROPPAR QUAISQUER ROLES CRIADOS PELO SECURITY ADMIN, no entanto)













-----------------------------------







PRECISAMOS DO GRANT DESSAS PERMISSIONS, PARA USAR ESSAS WAREHOUSES....



















-- OK... MAS __ ROLES__ NAO _ SAO __ 
A MESMA COISA QUE USERS_... PRECISAMOS DE USERS,
 PARA PODERMOS RODAR QUERIES...




--> PARA ISSO, PRECISAMOS DEFINIR OS _ LOGINS__ 

DESSES USERS,

E ENTAO 

ASSIGNAR 


USERS A ESSES ROLES (ou os roles aos users, mesma coisa)....


















-> O PROFESSOR ESCREVE ASSIM:






//SETTING UP USERS, AND THEN ASSIGNING ROLES TO THEM....


//creating USERS 
CREATE USER DS1 PASSWORD = 'DS1' LOGIN_NAME = 'DS1' DEFAULT_ROLE='DATA_SCIENTIST' DEFAULT_WAREHOUSE = 'SCIENCE_WH' MUST_CHANGE_PASSWORD = FALSE;
CREATE USER DS2 PASSWORD = 'DS2' LOGIN_NAME = 'DS2' DEFAULT_ROLE='DATA_SCIENTIST' DEFAULT_WAREHOUSE = 'SCIENCE_WH' MUST_CHANGE_PASSWORD = FALSE;
CREATE USER DS3 PASSWORD = 'DS3' LOGIN_NAME = 'DS3' DEFAULT_ROLE='DATA_SCIENTIST' DEFAULT_WAREHOUSE = 'SCIENCE_WH' MUST_CHANGE_PASSWORD = FALSE;



//assigning roles to users
GRANT ROLE DATA_SCIENTIST TO USER DS1;
GRANT ROLE DATA_SCIENTIST TO USER DS2;
GRANT ROLE DATA_SCIENTIST TO USER DS3;












OK... RODEI TODAS ESSAS QUERIES...










AGORA TEMOS 3 USERS,


ds1, ds2 e ds3,







OS 3 COM ROLE DE ""DATA_SCIENTIST""...














--> FAZEMOS A MESMA COISA PARA OS DATABASE ADMINS,

assim:










//CREATE USER FOR DB ADMINS 
CREATE USER DBA1 PASSWORD = 'DBA1' LOGIN_NAME= 'DBA1' DEFAULT_ROLE='DB_ADMIN' DEFAULT_WAREHOUSE='ADMIN_WH' MUST_CHANGE_PASSWORD=FALSE;
CREATE USER DBA2 PASSWORD = 'DBA2' LOGIN_NAME= 'DBA2' DEFAULT_ROLE='DB_ADMIN' DEFAULT_WAREHOUSE='ADMIN_WH' MUST_CHANGE_PASSWORD=FALSE;











---------------------







O PROFESSOR QUER TESTAR ESSES USERS..





PARA ISSO, ABRIMOS UMA NOVA JANELA COM O SNOWFLAKE,



E COLOCAMOS ESSES LOGINS E PASSWORDS QUE CRIAMOS AGORA...







-------------------------










se logamos nessa outra conta,

"DBA1" (que tem role de ""DB_ADMIN""),




VEREMOS QUE 

SÓ SERÁ 


POSSÍVEL




MANIPULAR A WAREHOUSE ""ADMIN_WH"",




QUE FOI JUSTAMENTE A 


WAREHOUSE 




QUE ""ENTREGAMOS"" A ESSE TIPO DE USER...









--  e realmente ficamos com 1 monte de features limitadas, nessa conta...











ok... finalmente estou entendendo... e apenas USERS podem fazer login...'




--  e realmente ficamos com 1 monte de features limitadas, nessa conta...




-- E O PRÓPRIO ""DB_ADMIN"" NAO PODE FAZER DROP DE 1 WAREHOUSE, PQ ISSO SÓ É PERMITIDO A ROLES COM PERMISSSIONS 
-- MAIS ELEVADAS...















-> é claro que é possível ENTREGAR O ROLE DE ""ACCOUNTADMIN'"



A OUTROS USERS DE NOSSO APP...---> MAS ESSA NAO É UMA BOA PRÁTICA...



-> E PODEMOS COLOCAR MÚLTIPLOS ROLES EM 1 MESMO USER....














--> E É ASSIM QUE CONSEGUIMOS CRIAR DEDICATED VIRTUAL WAREHOUSES,

E AS VINCULAR A CERTOS USER GROUPS..








RESUMO:





1) CRIAMOS AS VIRTUAL WAREHOUSES DEDICADAS... (com os tamanhos apropriadas)






2) CRIAMOS OS __ ROLES__ PARA OS USER GROUPS....





3) CONFERIMOS (GRANT) PERMISSION DE USAGE 
A ESSES ROLES.... 





4) ASSIGNAMOS (GRANT) esses ROLES __ AOS USERS QUE 

QUEREMOS QUE TENHAM ESSE ACESSO/PERMISSIONS...


















OK... ESSE ERA O PRIMEIRO PASSO 

NO SENTIDO DE MELHORAR A PERFORMANCE 



DE NOSSAS WAREHOUSES/APP/QUERIES...






