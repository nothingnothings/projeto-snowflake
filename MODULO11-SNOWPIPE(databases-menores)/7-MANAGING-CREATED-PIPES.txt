





AGORA QUE APRENDEMOS SOBRE COMO PODEMOS CRIAR 



NOSSAS PIPES,
 
 COM ESTA SEQUENCIA DE CÓDIGOS:






-- CREATE TABLE FIRST 
CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.employees (
        ID INT,
        first_name STRING,
        last_name STRING,
        email STRING,
        location STRING,
        department STRING
    );
-- Create File format Object 
CREATE OR REPLACE FILE FORMAT MANAGE_DB.file_formats.csv_file_format_new TYPE = CSV field_delimiter = ',',
    skip_header = 1 null_if =('NULL', 'null') empty_field_as_null = TRUE;




-- CREATE STAGE
CREATE OR REPLACE STAGE MANAGE_DB.stages.csv_folder
    URL = 's3://snowflake-test-masterclass-bucket/CSV/snowpipe'
    STORAGE_INTEGRATION= S3_EXAMPLE_INTEGRATION
    FILE_FORMAT=(
        FORMAT_NAME=MANAGE_DB.FILE_FORMATS.CSV_FILE_FORMAT
    );



-- LIST FILES IN BUCKET FOLDER/stage 

LIST @MANAGE_DB.stages.csv_folder;



-- CREATE SCHEMA TO STORE SNOWPIPE PIPES 

CREATE OR REPLACE SCHEMA MANAGE_DB.pipes;




-- Create ACTUAL PIPE OBJECT 

CREATE OR REPLACE PIPE MANAGE_DB.pipes.employee_pipe
    AUTO_INGEST = TRUE -- sempre deve ser definido como TRUE
   -- podemos executar apenas esta parte, do copy into, para verificar se coisas estao funcionando (para que o pipe nao execute 1 copy que nao funciona)
    AS 
    COPY INTO OUR_FIRST_DB.PUBLIC.employees
    FROM @MANAGE_DB.stages.csv_folder;





-- CHECKS FOR EXISTENCE OF PIPE.
DESC PIPE MANAGE_DB.pipes.employee_pipe;

























AGORA DEVEMOS VER COMO PODEMOS 

MANAGEAR 




NOSSAS PIPES JÁ EXISTENTES...












FAREMOS 2 COISAS, NESSA LICAO:










1a COISA --> TER 1 OVERVIEW 

DE NOSSAS EXISTING PIPES....










2a COISA --> VER COMO PODEMOS 

""ALTER"" PIPES QUE JÁ EXISTEM...














A PRIMEIRA COISA, E O PRIMEIRO COMANDO SIMPLES,


É O DESCRIBE 1 SINGLE PIPE, TIPO ASSIM:









-- Manage pipes --



DESC PIPE MANAGE_DB.pipes.employee_pipe;











--> OK... AÍ DESCREVEMOS ESSA PIPE...






RODADO ESSE COMANDO,

GANHAMOS AS PROPERTIES 

DA PIPE....





PODEMOS CHECAR 1 SINGLE PIPE, COM ISSO...







--> DEPOIS DISSO,



TEMOS





1 COMANDO QUE MOSTRA 1 LISTA DE TODAS AS PIPES...







É O COMANDO 



SHOW PIPES;











--> ISSO MOSTRA 1 LISTA COMPLETA,

DE TODOS OS PIPES...









-_> E SE QUEREMOS __ LIMITAR__ 


ESSES PIPES,

PROCURAR POR APENAS PIPES COM CERTO PATTERN 

EM SEU NOME,



PODEMOS USAR 

O 

FILTRO 


DE 


"""LIKE""" com 1 string,


TIPO ASSIM:





SHOW PIPES LIKE '%employee%';













COM ISSO, GOSTARÍAMOS DE VER TODOS OS 

PIPES QUE TENHAM "employee" no nome...





---------------------------------






-- Show all pipes that have 'employee' in their names. -- CASE __INSENSITIVE
SHOW PIPES LIKE '%employee%';




















OUTRA COISA,
 
 PODEMOS 


 FAZER SHOW APENAS DE PIPES 


 EM 

 DATABASES ESPECÍFICAS,

 TIPO ASSIM:








SHOW PIPES IN DATABASE MANAGE_DB;

















TAMBÉM ASSIM:





-- Show pipes of only one database
SHOW PIPES IN DATABASE MANAGE_DB;



-- Show pipes of only one SCHEMA
SHOW PIPES IN SCHEMA MANAGE_DB.pipes;












E PODEMOS ACTUALLY COMBINAR OS 2,


TIPO ASSIM:






SHOW PIPES LIKE '%employee%' IN DATABASE MANAGE_DB;












-----------------------------------------









OK... ISSO SAO COISAS QUE PODEMOS FAZER SE QUISERMOS 



DAR 1 OLHADA NAS NOSSAS EXISTING PIPES....












AGORA VEREMOS COMO PODEMOS _ ALTERAR 1 EXISTING PIPE...














para mudar 1 existing pipe,



podemos escrever assim:







-- ALTERING EXISTING PIPES (alter stage or file format) -- 




-- PREPARATION TABLE FIRST 
CREATE OR REPLACE TABLE OUR_FIRST_DB.public.employees2 (
    ID INT,
    FIRST_NAME STRING,
    LAST_NAME STRING,
    EMAIL STRING,
    LOCATION STRING,
    DEPARTMENT STRING
);












CERTO...









CRIAMOS ESSA NOVA TABLE...











AGORA, QUEREMOS QUE NOSSA 

PIPE 


FACA COPY 

__ PARA __ DENTRO DESSA 

TABLE (

    ou seja,
    QUEREMOS TROCAR 


    A COPY DEFINITION DE NOSSO SNOWPIPE,

    DE "employees" table para 
    "employees2" table...
)
















DEPOIS DE CRIAR ESSA TABLE,


DEVEMOS 
VER

QUE 




STEPS DEVEMOS SEGUIR,
 

 PARA SUBSTITUIR 



A CONFIG DA PIPE...














A PRIMEIRA COISA QUE DEVEMOS FAZER É 

___PAUSAR __ A EXECUCAO DA PIPE,

COM ESTE COMANDO:





-- PAUSE PIPE 
ALTER PIPE MANAGE_DB.pipes.employee_pipe
    SET PIPE_EXECUTION_PAUSED = TRUE;









ESSE É O PROCEDIMENTO RECOMENDADO 


PELO SNOWFLAKE...










--> PAUSAMOS A NOSSA PIPE... -> 



ISSO FEITO,


QUEREMOS VERIFICAR SE 

A PIPE REALMENTE ESTÁ PAUSADA...




-- VERIFY THAT PIPE IS REALLY PAUSED:
SELECT SYSTEM$PIPE_STATUS('MANAGE_DB.pipes.employee_pipe');











PRECISAMOS DESSE SYSTEM$PIPE_STATUS 

para checar 

o status de nossa pipe...














OK... COM ISSO, CONSTATAMOS QUE 


NOSSA PIPE ESTÁ PAUSED:






{"executionState":"PAUSED","pendingFileCount":0,"lastIngestedTimestamp":"2023-07-20T15:47:23.923Z","lastIngestedFilePath":"/employee_data_4.csv","notificationChannelName":"arn:aws:sqs:us-east-1:475055360349:sf-snowpipe-AIDAW5G4BRFO5Q3ZE3DWI-0N6R2utYyOFCy5TOernvnw","numOutstandingMessagesOnChannel":1,"lastReceivedMessageTimestamp":"2023-07-20T15:47:23.738Z","lastForwardedMessageTimestamp":"2023-07-20T15:47:24.201Z","lastPulledFromChannelTimestamp":"2023-07-20T16:08:28.729Z","lastForwardedFilePath":"snowflake-test-masterclass-bucket/CSV/snowpipe/employee_data_4.csv"}











-> ESTÁ PAUSADA, E ESTAMOS COM 0 PENDING FILES...







--> NA VERDADE,




é IMPOSSÍVEL __ ALTERARMOS APENAS O COPY COMMAND 

DE NOSSA PIPE...







-> É BEM MELHOR SÓ FAZER O RECREATE DESSA 
PIPE,


COM 

CREATE OR REPLACE,
TIPO ASSIM:






--
CREATE OR REPLACE PIPE MANAGE_DB.pipes.employee_pipe
    AUTO_INGEST=TRUE
AS
COPY INTO OUR_FIRST_DB.PUBLIC.employees2
FROM @MANAGE_DB.stages.csv_folder;













EX:




-- Recreate the pipe, to change the copy statement in its definition (used by the pipe)
CREATE OR REPLACE PIPE MANAGE_DB.pipes.employee_pipe
    AUTO_INGEST=TRUE
AS
COPY INTO OUR_FIRST_DB.PUBLIC.employees2
FROM @MANAGE_DB.stages.csv_folder;


















COM ISSO RECRIAMOS NOSSA PIPE...











--> isso feito,




DEVEMOS __ DAR REFRESH NA NOSSA PIPE...




--> RODAMOS 


ALTER PIPE MANAGE_DB.pipes.employee_pipe REFRESH;














--> PERCEBEMOS QUE, MESMO COM ESSA PIPE RESETTADA,


A METADATA DA PIPE ""ANTIGA"" AINDA FICA DISPONÍVEL
NELA... (podemos ver a list de todas received files)














MAS AINDA TEMOS 1 PROBLEMA...


ESTAMOS COM 1 NEW TABLE,

E AINDA QUEREMOS

TER 


TODA AS FILES DE NOSSO STAGE 


COPIADAS PARA DENTRO 

DESSA TABLE 

RECÉM CRIADA....










--> ISSO QUER DIZER QUE __PRECISAMOS 


___fAZER___ 

""RELOAD"" DESSAS FILES MANUALMENTE,




DESSAS FILES QUE JÁ ESTAVAM NO BUCKET,




POR MEIO DESTE COMANDO:









--RELOAD FILES MANUALLY, THAT WERE ALREADY IN THE BUCKET...
COPY INTO OUR_FIRST_DB.PUBLIC.employees2
FROM @MANAGE_DB.stages.csv_folder;











TUDO ESTÁ FINE, E AGORA ALTERAMOS/RECRIAMOS NOSSA PIPE COM SUCESSO...



